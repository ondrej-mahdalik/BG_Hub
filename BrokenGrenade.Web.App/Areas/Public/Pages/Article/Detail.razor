@page "/Article/{Id:guid}"
@using BrokenGrenade.Common.Models
@using BrokenGrenade.Web.App.Extensions
@using BrokenGrenade.Web.App.Resources
@using BrokenGrenade.Web.App.Resources.Areas.Public.Pages.Article
@using BrokenGrenade.Web.BL.Facades
@using Microsoft.Extensions.Localization
@inject ArticleFacade ArticleFacade
@inject UserFacade UserFacade
@inject IToastService ToastService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IStringLocalizer<ArticleDetailResources> Localizer
@inject IStringLocalizer<SharedResources> SharedLocalizer
@attribute [Authorize]

<PageTitle>@(_article?.Name ?? Localizer[nameof(ArticleDetailResources.Article)]) â€” @SharedLocalizer[nameof(SharedResources.AppShortName)]</PageTitle>

<div class="pt-3 pb-2 mb-3">
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a class="btn btn-sm btn-link text-decoration-none" href="/Article">
                <i class="fa-solid fa-angles-left"></i> @Localizer[nameof(ArticleDetailResources.BackToAllArticles)]
            </a>
            @if (_article is not null && _article.CreatorId == _currentUser?.Id)
            {
                <a class="btn btn-sm btn-link text-decoration-none" href="/Staff/Article/Edit/@_article.Id">
                    <i class="fa-solid fa-edit"></i> @Localizer[nameof(ArticleDetailResources.EditArticle)]
                </a>
            }
        </div>
    </div>
    @if (_article is null)
    {
        <div class="col">
            <h1 class="h2 placeholder-glow">
                <span class="placeholder col-6"></span>
            </h1>
        </div>
    }
    else
    {
        <h1 class="h2">@_article.Name</h1>
        
    }
</div>
<div class="card bg-dark-subtle container-xxl m-0 mb-4 p-0">
    <div class="card-body">
        <div class="row">
            <div class="col">
                @if (_article is null)
                {
                    <p class="placeholder-glow">
                        <span class="placeholder col-12"></span>
                    </p>
                    <p class="placeholder-glow">
                        <span class="placeholder col-8"></span>
                    </p>
                    <p class="placeholder-glow">
                        <span class="placeholder col-8"></span>
                    </p>
                    <p class="placeholder-glow">
                        <span class="placeholder col-8"></span>
                    </p>
                    <p class="placeholder-glow">
                        <span class="placeholder col-8"></span>
                    </p>
                    <p class="placeholder-glow">
                        <span class="placeholder col-8"></span>
                    </p>
                }
                else
                {
                    @((MarkupString)_article.Content)
                }
            </div>
        </div>
    </div>
    <div class="card-footer">
        @if (_article?.Creator is not null)
        {
            <small class="text-body-secondary">@Localizer[nameof(ArticleDetailResources.CreatedBy)] <b>@_article.Creator.Nickname</b></small>
        }
    </div>
</div>
@code {
    [Parameter]
    public Guid Id { get; set; }
    
    private ArticleModel? _article;
    private UserModel? _currentUser;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _article = await ArticleFacade.GetAsync(Id);
            if (_article is null)
                throw new Exception(Localizer[nameof(ArticleDetailResources.FailedToLoadArticle)]);

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            _currentUser = await UserFacade.GetAsync(authState.GetUserId().GetValueOrDefault());
        }
        catch (Exception e)
        {
            ToastService.ShowError(e.Message);
        }
    }
}