@page "/Calendar/Training"
@using BrokenGrenade.Common.Models
@using BrokenGrenade.Web.App.Resources
@using BrokenGrenade.Web.App.Resources.Areas.Public.Pages.Training
@using BrokenGrenade.Web.BL.Facades
@using Microsoft.Extensions.Localization
@inject TrainingFacade TrainingFacade
@inject NavigationManager NavigationManager
@inject IStringLocalizer<TrainingCalendarResources> Localizer
@inject IStringLocalizer<SharedResources> SharedLocalizer

<PageTitle>@Localizer[nameof(TrainingCalendarResources.HubPageTitle)] — BG Hub</PageTitle>

<div class="pt-3 pb-2 mb-3">
    <h1 class="h2">@Localizer[nameof(TrainingCalendarResources.HubPageTitle)]</h1>
</div>
<div class="row">
    <div class="col">
        @if (_trainings is null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border m-5" role="status">
                    <span class="visually-hidden">Načítání...</span>
                </div>
            </div>
        }
        else
        {
            <SfSchedule TValue="TrainingModel" EnableAutoRowHeight="true">
                <ScheduleViews>
                    <ScheduleView Option="View.Month" FirstDayOfWeek="1" Readonly="true" />
                </ScheduleViews>
                <ScheduleEventSettings DataSource="_trainings" EnableTooltip="true">
                        <TooltipTemplate>
                            <div>
                                <p class="mb-0">@SharedLocalizer[nameof(SharedResources.TrainingCreator)]: <b>@((context as TrainingModel)?.Creator?.Nickname ?? SharedLocalizer[nameof(SharedResources.DeletedUser)])</b></p>
                            </div>
                        </TooltipTemplate>
                        <ChildContent>
                            <ScheduleField Id="@nameof(TrainingModel.Id)">
                                <FieldSubject Name="@nameof(TrainingModel.Name)"/>
                                <FieldStartTime Name="@nameof(TrainingModel.Date)"/>
                                <FieldEndTime Name="@nameof(TrainingModel.Date)"/>
                            </ScheduleField>
                        </ChildContent>
                    </ScheduleEventSettings>
                    <ScheduleEvents TValue="TrainingModel" OnEventClick="HandleEventClick"/>
            </SfSchedule>
        }
    </div>
</div>

@code {
    
    private List<TrainingModel>? _trainings;

    protected override async Task OnInitializedAsync()
    {
        _trainings = await TrainingFacade.GetAsync();
    }

    private void HandleEventClick(EventClickArgs<TrainingModel> obj)
    {
        if (obj.Event is null)
            return;
        
        NavigationManager.NavigateTo($"/Training/{obj.Event.Id}");
    }
}