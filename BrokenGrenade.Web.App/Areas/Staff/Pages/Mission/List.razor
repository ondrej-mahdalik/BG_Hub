@page "/Staff/Mission"
@using BrokenGrenade.Common.Permissions
@using BrokenGrenade.Web.BL.Facades
@using Microsoft.AspNetCore.Components
@using BrokenGrenade.Common.Models
@using BrokenGrenade.Common.Models.Filters
@using BrokenGrenade.Web.App.Extensions
@using BrokenGrenade.Common.Extensions
@inject MissionFacade MissionFacade
@inject ModpackTypeFacade ModpackTypeFacade
@inject MissionTypeFacade MissionTypeFacade

@attribute [Authorize(Policy = PolicyTypes.ManageMissions)]

<PageTitle>Správa misí — BG Hub</PageTitle>

<div class="pt-3 pb-2 mb-3">
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <AuthorizeView Policy="@PolicyTypes.ManageMissionTypes">
                <Authorized>
                    <a class="btn btn-sm btn-link text-decoration-none" href="/Staff/MissionType">
                        <i class="fa-solid fa-gear"></i> Správa druhů misí
                    </a>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Policy="@PolicyTypes.ManageModpackTypes">
                <Authorized>
                    <a class="btn btn-sm btn-link text-decoration-none" href="/Staff/ModpackType">
                        <i class="fa-solid fa-gear"></i> Správa modpacků
                    </a>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
    <h1 class="h2">Správa misí</h1>
</div>
<div class="card bg-dark-subtle mb-4">
    <div class="card-header">
        <h6 class="card-title">Filtrování</h6>
    </div>
    <div class="card-body">
        <EditForm Model="_filter" id="filterForm" OnSubmit="() => FilterAsync()">
            <div class="row">
                <div class="col col-sm-6">
                    <div class="mb-3">
                        <label for="searchName" class="form-label">Podle názvu</label>
                        <InputText class="form-control" @bind-Value="_filter.Name" id="searchName"/>
                    </div>
                    <div class="mb-3">
                        <label for="searchMissionType" class="form-label">Podle kategorie</label>
                        <InputSelect TValue="Guid?" class="form-select" @bind-Value="_filter.MissionType" id="searchMissionType">
                            <option value="" selected>Všechny kategorie</option>
                            @if (_missionTypes is not null)
                            {
                                @foreach (var type in _missionTypes)
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>
                    <div class="mb-3">
                        <label for="searchDate" class="form-label">Podle data</label>
                        <InputDate Type="InputDateType.Date" class="form-control" @bind-Value="_filter.Date" id="searchDate"/>
                    </div>
                </div>
                <div class="col col-sm-6">
                    <div class="mb-3">
                        <label for="searchCreator" class="form-label">Podle autora</label>
                        <InputText class="form-control" @bind-Value="_filter.Creator" id="searchCreator"/>
                    </div>
                    <div class="mb-3">
                        <label for="searchModpackType" class="form-label">Podle modpacku</label>
                        <InputSelect TValue="Guid?" class="form-select" @bind-Value="_filter.ModpackType" id="searchModpackType">
                            <option value="" selected>Všechny modpacky</option>
                            @if (_modpackTypes is not null)
                            {
                                @foreach (var type in _modpackTypes)
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="d-flex flex-row gap-2">
                        <button type="submit" class="btn btn-primary">Filtrovat</button>
                        <button type="reset" class="btn btn-outline-secondary" @onclick="ResetFilter">Vymazat filtry</button>
                    </div>
                    
                </div>
            </div>
        </EditForm>
    </div>
</div>
<div class="card bg-dark-subtle mb-4">
    <div class="card-body">
        <PaginatedListComponent TItem="MissionModel"
                                @ref="_list"
                                Items="_missions"
                                TotalCount="MissionFacade.GetCountAsync(_filter).Result"
                                DetailPageUrl="/Mission/"
                                EmptyMessage="Nebyly nalezeny žádné mise"
                                PageNumberChanged="OnPageNumberChangedAsync"
                                Class="table-striped table-hover">
            <TableHeader>
                <th>Datum</th>
                <th>Název</th>
                <th>Autor</th>
                <th>Kategorie mise</th>
                <th>Modpack</th>
                <th></th>
            </TableHeader>
            <RowTemplate Context="mission">
                <td>@mission.MissionStartDate.ToDateTimeString()</td>
                <td>@mission.Name</td>
                <td>@(mission.Creator?.Nickname ?? "Odstraněný uživatel")</td>
                <td>@(mission.MissionType?.Name ?? "Odstraněná kategorie")</td>
                <td>@(mission.ModpackType?.Name ?? "Ostatní")</td>
                <td>
                    <div class="d-flex justify-content-end" @onclick:stopPropagation="true">
                        <a class="btn btn-sm btn-primary" href="/Staff/Mission/Edit/@mission.Id">Upravit</a>
                    </div>
                </td>
            </RowTemplate>
        </PaginatedListComponent>
    </div>
</div>

@code {
    private List<MissionModel>? _missions;
    private MissionFilterModel _filter = new();
    private PaginatedListComponent<MissionModel> _list = null!;

    private List<MissionTypeModel>? _missionTypes;
    private List<ModpackTypeModel>? _modpackTypes;
    protected override async Task OnInitializedAsync()
    {
        await FilterAsync();
        _missionTypes = await MissionTypeFacade.GetAsync();
        _modpackTypes = await ModpackTypeFacade.GetAsync();
    }
    
    private async Task FilterAsync(int page = 0)
    {
        _missions = await MissionFacade.GetPaginatedAsync(_filter, page);
    }

    private void ResetFilter()
    {
        _filter = new();
        _list.CurrentPage = 0;
    }
    
    private async Task OnPageNumberChangedAsync(int page)
    {
        await FilterAsync(page);
    }
}