@typeparam TItem where TItem : BrokenGrenade.Common.Models.IModel
@inject NavigationManager NavigationManager

@if (Items is null)
{
    <table class="table table-striped @Class">
        <thead>
        <tr>
            @TableHeader
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>
                <p class="placeholder-glow">
                    <span class="placeholder col-12"></span>
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="placeholder-glow">
                    <span class="placeholder col-12"></span>
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="placeholder-glow">
                    <span class="placeholder col-12"></span>
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="placeholder-glow">
                    <span class="placeholder col-12"></span>
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="placeholder-glow">
                    <span class="placeholder col-12"></span>
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="placeholder-glow">
                    <span class="placeholder col-12"></span>
                </p>
            </td>
        </tr>
        </tbody>
    </table>
}
else
{
    <table class="table @Class">
        <thead>
        <tr>
            @TableHeader
        </tr>
        </thead>
        <tbody>
        @if (Items.Count == 0)
        {
            <tr>
                <td colspan="100">
                    <p class="text-center fw-bold p-2">@EmptyMessage</p>
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in Items)
            {
                @if (DetailPageUrl is not null)
                {
                    <tr class="cursor-pointer" @onclick="() => NavigationManager.NavigateTo(DetailPageUrl + item.Id)">
                        @RowTemplate?.Invoke(item)
                    </tr>
                }
                else
                {
                    <tr>
                        @RowTemplate?.Invoke(item)
                    </tr>
                }
            }
        }
        </tbody>
    </table>
    <div class="row">
        <div class="col-12 col-sm-6 align-self-center">
            <p>Zobrazeno @(1 + CurrentPage * 10)-@(10 + CurrentPage * 10 < TotalCount ? 10 + CurrentPage * 10 : TotalCount) @(TotalCount is > 1 and < 5 ? "ze" : "z") @TotalCount</p>
        </div>
        <div class="col-12 col-sm-6">
            <nav class="d-flex justify-content-end">
                <ul class="pagination">
                    <li class="page-item @(CurrentPage <= 0 ? "disabled" : "")">
                        <button class="page-link" @onclick="() => {CurrentPage--;}">
                            <i class="fa-solid fa-chevron-left"></i>
                        </button>
                    </li>
                    @for (var i = CurrentPage - 1; i <= CurrentPage + 1; i++)
                    {
                        var num = i;
                        if (CurrentPage == 0)
                            num = i + 1;// So user cant go to page -1
                        else if (CurrentPage >= PageCount - 1)
                            num = i - 1;// So user cant go to page > PageCount

                        if (num > PageCount - 1)
                            break;// If there are less than 3 pages in total

                        if (CurrentPage == 1 && PageCount == 2 && i == 0)
                            continue;// If there are only 2 pages, clicking the second page would make page 0 appear

                        <li class="page-item @(num == CurrentPage ? "active" : "")">
                            <button class="page-link" @onclick="() => {CurrentPage = num;}">@(num + 1)</button>
                        </li>
                    }
                    <li class="page-item @(CurrentPage >= PageCount - 1 ? "disabled" : "")">
                        <button class="page-link" @onclick="() => {CurrentPage++;}">
                            <span aria-hidden="true">
                                <i class="fa-solid fa-chevron-right"></i>
                            </span>
                        </button>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
}

@code {
    [Parameter]
    public RenderFragment? TableHeader { get; set; }
    
    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }
    
    [Parameter]
    public List<TItem>? Items { get; set; }
    
    [Parameter]
    public int TotalCount { get; set; }
    
    [Parameter]
    public string? DetailPageUrl { get; set; }
    
    [Parameter]
    public string EmptyMessage { get; set; } = "Nebyly nalezeny žádné položky";
    
    [Parameter]
    public EventCallback<int> PageNumberChanged { get; set; }
    
    [Parameter]
    public string? Class { get; set; }

    private int _currentPage = 0;
    public int CurrentPage
    {
        get => _currentPage;
        set
        {
            if (value <= 0)
                value = 0;
            
            _currentPage = value;
            PageNumberChanged.InvokeAsync(value);
        }
    }

    private int PageCount => (int) Math.Ceiling(TotalCount / 10.0);
}