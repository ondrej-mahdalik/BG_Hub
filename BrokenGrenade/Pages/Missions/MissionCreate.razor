@page "/Mission/Create"
@attribute [Authorize(Policy = "CanCreateMissions")]
@using BrokenGrenade.Data
@using BrokenGrenade.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager;
@inject NavigationManager NavigationManager;
@inject MissionService MissionService;
@inject MissionCategoryService MissionCategoryService;
@inject ModpackTypeService ModpackTypeService;

<PageTitle>Vytvořit Misi</PageTitle>

<div class="row">
    <div class="col">
        <h3 class="text-dark mb-4">Vytvořit Misi</h3>
    </div>
</div>
<div class="card shadow">
    <div class="card-body">
        <div class="row">
            <div class="col">
                <EditForm Model="_missionModel" OnValidSubmit="OnSubmit">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <div class="row mb-2">
                        <div class="col">
                            <div><label class="form-label" for="nazev">Název</label><InputText id="nazev" class="form-control" @bind-Value="_missionModel.Name" style="min-width: 150px;"/></div>
                        </div>
                        <div class="col">
                            <div><label class="form-label" for="druh">Druh Mise</label>
                                <InputSelect id="druh" class="form-select" @bind-Value="_missionModel.CategoryId" name="druh" style="min-width: 150px;">
                                    @foreach (var category in _missionCategories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </InputSelect></div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col">
                            <div><label class="form-label" for="datum">Datum</label><InputDate id="datum" class="form-control" @bind-Value="_missionModel.Date" Type="InputDateType.Date"/></div>
                            <div hidden="@(!(_missionModel.Date.HasValue && _upcomingMissions.Any(x => x.Start.Date == _missionModel.Date.Value.Date)))" class="alert alert-warning mb-0 mt-2" role="alert"><i class="fas fa-exclamation-triangle me-2"></i><span><strong>V tento den je již nějaká mise naplánovaná!</strong></span></div>
                        </div>
                        <div class="col">
                            <div><label class="form-label" for="napojovani">Napojování</label><InputDate id="napojovani" class="form-control" @bind-Value="_missionModel.ConectingToServer" Type="InputDateType.Time" name="napojovani"/></div>
                        </div>
                        <div class="col">
                            <div><label class="form-label" for="zacatek">Začátek</label><InputDate id="zacatek" class="form-control" @bind-Value="_missionModel.Start" Type="InputDateType.Time" name="zacatek"/></div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col">
                            <div class="form-check form-switch"><InputCheckbox id="je-briefing" class="form-check-input" @bind-Value="_missionModel.IsLeaderBriefing" type="checkbox" role="switch" name="je-briefing" checked/><label class="form-label form-check-label" for="je-briefing">Velitelský briefing</label></div>
                            @if (_missionModel.IsLeaderBriefing)
                            {
                                <div><InputDate class="form-control" @bind-Value="_missionModel.LeaderBriefing" Type="InputDateType.DateTimeLocal" name="briefing"/></div>
                            }
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col">
                            <div class="mb-2"><label class="form-label" for="modpack">Modpack</label>
                                <InputSelect id="modpack" class="form-select" @bind-Value="_missionModel.ModpackTypeId" name="modpack">
                                    @foreach (var modpack in _modpackTypes)
                                    {
                                        <option value="@modpack.Id">@modpack.Name</option>
                                    }
                                    <option value="">Vlastní</option>
                                </InputSelect></div>
                            @if (_missionModel.ModpackTypeId is null)
                            {
                                <div><label class="form-label" for="modpack">Odkaz na modpack <em>(lze doplnit později)</em></label><InputText id="modpack-url" class="form-control" @bind-Value="_missionModel.ModpackUrl" type="url" name="modpack-url"/></div>
                            }
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col">
                            <div><label class="form-label" for="slotovani">Slotování</label><InputText id="slotovani" class="form-control" @bind-Value="_missionModel.SlottingSheetUrl" type="url" name="slotovani"/></div>
                        </div>
                    </div>
                    <div class="row d-xl-flex justify-content-xl-end">
                        <div class="col col-auto"><a class="btn btn-danger mb-2 mb-sm-0" role="button" href="/Mission/List">Zahodit a vrátit se zpět</a></div>
                        <div class="col col-auto"><button class="btn btn-primary" disabled="@_disableButton" type="submit">Vytvořit Misi</button></div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string? _loggedUserId;
    
    private MissionEditModel _missionModel = new();

    private List<MissionCategory> _missionCategories = new();
    private List<ModpackType> _modpackTypes = new();

    private bool _disableButton;
    private List<Mission> _upcomingMissions = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var loggedUser = (await authenticationStateTask).User;
        _loggedUserId = UserManager.GetUserId(loggedUser);

        _disableButton = false;
        _missionCategories = await MissionCategoryService.GetAllAsync();
        _modpackTypes = await ModpackTypeService.GetAllAsync();
        _missionModel.CategoryId = _missionCategories.FirstOrDefault()?.Id;
        _missionModel.ModpackTypeId = _modpackTypes.FirstOrDefault()?.Id;

        _upcomingMissions = await MissionService.GetUpcomingAsync();
    }

    private async Task OnSubmit()
    {
        _disableButton = true;

        var mission = _missionModel.ToMission();
        mission.AuthorId = _loggedUserId;
        
        await MissionService.InsertOrUpdateAsync(mission);
        _disableButton = false;
        NavigationManager.NavigateTo($"/Mission/List?created");
    }
}